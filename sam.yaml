AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Exported by architect/package@6.0.1 on 2020-12-14T02:23:32.307Z
Resources:
  HTTP:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: $default
      DefinitionBody:
        openapi: 3.0.1
        info:
          title:
            Ref: AWS::StackName
        paths:
          /:
            get:
              x-amazon-apigateway-integration:
                payloadFormatVersion: '2.0'
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIndexHTTPLambda.Arn}/invocations
                connectionType: INTERNET
          /jobs:
            get:
              x-amazon-apigateway-integration:
                payloadFormatVersion: '2.0'
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetJobsHTTPLambda.Arn}/invocations
                connectionType: INTERNET
            post:
              x-amazon-apigateway-integration:
                payloadFormatVersion: '2.0'
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostJobsHTTPLambda.Arn}/invocations
                connectionType: INTERNET
          /active-jobs:
            get:
              x-amazon-apigateway-integration:
                payloadFormatVersion: '2.0'
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetActiveJobsHTTPLambda.Arn}/invocations
                connectionType: INTERNET
          /jobs/{id}:
            get:
              x-amazon-apigateway-integration:
                payloadFormatVersion: '2.0'
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetJobsIdHTTPLambda.Arn}/invocations
                connectionType: INTERNET
          /{proxy+}:
            get:
              x-amazon-apigateway-integration:
                payloadFormatVersion: '2.0'
                type: aws_proxy
                httpMethod: POST
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetCatchallHTTPLambda.Arn}/invocations
                connectionType: INTERNET
          /_static/{proxy+}:
            get:
              x-amazon-apigateway-integration:
                payloadFormatVersion: '1.0'
                type: http_proxy
                httpMethod: GET
                uri:
                  Fn::Sub:
                  - http://${bukkit}.s3.${AWS::Region}.amazonaws.com/{proxy}
                  - bukkit:
                      Ref: StaticBucket
                connectionType: INTERNET
                timeoutInMillis: 30000
  GetIndexHTTPLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://workays-api-cfn-deployments-bdf1a/7abfea5408f515b624dc9ad248763920
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_APP_NAME: workays-api
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_ENV: staging
          ARC_HTTP: aws_proxy
          ARC_ROLE:
            Ref: Role
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          ARC_STATIC_BUCKET:
            Ref: StaticBucket
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        GetIndexHTTPEvent:
          Type: HttpApi
          Properties:
            Path: /
            Method: GET
            ApiId:
              Ref: HTTP
  GetJobsHTTPLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://workays-api-cfn-deployments-bdf1a/8eb5d80a316488040a2bf6e814a48be9
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_APP_NAME: workays-api
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_ENV: staging
          ARC_HTTP: aws_proxy
          ARC_ROLE:
            Ref: Role
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          ARC_STATIC_BUCKET:
            Ref: StaticBucket
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        GetJobsHTTPEvent:
          Type: HttpApi
          Properties:
            Path: /jobs
            Method: GET
            ApiId:
              Ref: HTTP
  GetActiveJobsHTTPLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://workays-api-cfn-deployments-bdf1a/159d664da581d3d812ed6701603027a4
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_APP_NAME: workays-api
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_ENV: staging
          ARC_HTTP: aws_proxy
          ARC_ROLE:
            Ref: Role
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          ARC_STATIC_BUCKET:
            Ref: StaticBucket
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        GetActiveJobsHTTPEvent:
          Type: HttpApi
          Properties:
            Path: /active-jobs
            Method: GET
            ApiId:
              Ref: HTTP
  PostJobsHTTPLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://workays-api-cfn-deployments-bdf1a/88136876be8544a092997e9d27ccbd06
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_APP_NAME: workays-api
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_ENV: staging
          ARC_HTTP: aws_proxy
          ARC_ROLE:
            Ref: Role
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          ARC_STATIC_BUCKET:
            Ref: StaticBucket
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        PostJobsHTTPEvent:
          Type: HttpApi
          Properties:
            Path: /jobs
            Method: POST
            ApiId:
              Ref: HTTP
  GetJobsIdHTTPLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://workays-api-cfn-deployments-bdf1a/e26e0114d9f088179095f24d4592cd92
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_APP_NAME: workays-api
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_ENV: staging
          ARC_HTTP: aws_proxy
          ARC_ROLE:
            Ref: Role
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          ARC_STATIC_BUCKET:
            Ref: StaticBucket
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        GetJobsIdHTTPEvent:
          Type: HttpApi
          Properties:
            Path: /jobs/{id}
            Method: GET
            ApiId:
              Ref: HTTP
  GetCatchallHTTPLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://workays-api-cfn-deployments-bdf1a/394ffd8f652a9bed660cf2c7d05531b9
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_APP_NAME: workays-api
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_ENV: staging
          ARC_HTTP: aws_proxy
          ARC_ROLE:
            Ref: Role
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          ARC_STATIC_BUCKET:
            Ref: StaticBucket
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events:
        GetCatchallHTTPEvent:
          Type: HttpApi
          Properties:
            Path: /{proxy+}
            Method: GET
            ApiId:
              Ref: HTTP
  WorkhaysTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
      AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
      - AttributeName: gsi1pk
        AttributeType: S
      - AttributeName: gsi1sk
        AttributeType: S
      - AttributeName: gsi2pk
        AttributeType: S
      - AttributeName: gsi2sk
        AttributeType: S
      - AttributeName: gsi3pk
        AttributeType: S
      - AttributeName: gsi3sk
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      TimeToLiveSpecification:
        AttributeName: TTL
        Enabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      GlobalSecondaryIndexes:
      - IndexName: gsi1pk-gsi1sk-index
        KeySchema:
        - AttributeName: gsi1pk
          KeyType: HASH
        - AttributeName: gsi1sk
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
      - IndexName: gsi2pk-gsi2sk-index
        KeySchema:
        - AttributeName: gsi2pk
          KeyType: HASH
        - AttributeName: gsi2sk
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
      - IndexName: gsi3pk-gsi3sk-index
        KeySchema:
        - AttributeName: gsi3pk
          KeyType: HASH
        - AttributeName: gsi3sk
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
  WorkhaysStreamLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: s3://workays-api-cfn-deployments-bdf1a/0ca977373d33d44574c71fcf6bb79941
      Runtime: nodejs12.x
      MemorySize: 1152
      Timeout: 5
      Environment:
        Variables:
          ARC_APP_NAME: workays-api
          ARC_CLOUDFORMATION:
            Ref: AWS::StackName
          ARC_ENV: staging
          ARC_HTTP: aws_proxy
          ARC_ROLE:
            Ref: Role
          NODE_ENV: staging
          SESSION_TABLE_NAME: jwe
          ARC_STATIC_BUCKET:
            Ref: StaticBucket
      Role:
        Fn::Sub:
        - arn:aws:iam::${AWS::AccountId}:role/${roleName}
        - roleName:
            Ref: Role
      Events: {}
  WorkhaysStreamEvent:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      EventSourceArn:
        Fn::GetAtt:
        - WorkhaysTable
        - StreamArn
      FunctionName:
        Fn::GetAtt:
        - WorkhaysStreamLambda
        - Arn
      StartingPosition: TRIM_HORIZON
  StaticBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: ArcGlobalPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            Resource: arn:aws:logs:*:*:*
      - PolicyName: ArcStaticBucketPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:PutObject
            - s3:PutObjectAcl
            - s3:DeleteObject
            Resource:
            - Fn::Sub:
              - arn:aws:s3:::${bukkit}
              - bukkit:
                  Ref: StaticBucket
            - Fn::Sub:
              - arn:aws:s3:::${bukkit}/*
              - bukkit:
                  Ref: StaticBucket
      - PolicyName: ArcDynamoPolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:UpdateItem
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:DescribeStream
            - dynamodb:ListStreams
            Resource:
            - Fn::Sub:
              - arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}
              - tablename:
                  Ref: WorkhaysTable
            - Fn::Sub:
              - arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*
              - tablename:
                  Ref: WorkhaysTable
            - Fn::Sub:
              - arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/stream/*
              - tablename:
                  Ref: WorkhaysTable
  WorkhaysParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name:
        Fn::Sub:
        - /${AWS::StackName}/tables/${tablename}
        - tablename: workhays
      Value:
        Ref: WorkhaysTable
  StaticBucketParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name:
        Fn::Sub:
        - /${AWS::StackName}/static/${key}
        - key: bucket
      Value:
        Ref: StaticBucket
  StaticFingerprintParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name:
        Fn::Sub:
        - /${AWS::StackName}/static/${key}
        - key: fingerprint
      Value: 'false'
  ParameterStorePolicy:
    Type: AWS::IAM::Policy
    DependsOn: Role
    Properties:
      PolicyName: ArcParameterStorePolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: ssm:GetParametersByPath
          Resource:
            Fn::Sub:
            - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}
            - {}
      Roles:
      - Ref: Role
Outputs:
  API:
    Description: API Gateway (HTTP)
    Value:
      Fn::Sub:
      - https://${ApiId}.execute-api.${AWS::Region}.amazonaws.com
      - ApiId:
          Ref: HTTP
  ApiId:
    Description: API ID (ApiId)
    Value:
      Ref: HTTP
  BucketURL:
    Description: Bucket URL
    Value:
      Fn::Sub:
      - http://${bukkit}.s3-website-${AWS::Region}.amazonaws.com
      - bukkit:
          Ref: StaticBucket
